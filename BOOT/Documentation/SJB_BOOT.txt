=============================================================================
List of generated methods in project: SJB_BOOT

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "CANComm"   (component FreescaleCAN)
   - CANComm_Enable -Enables the component - it turns on the send and receive functions. Events may be generated 
                ("DisableEvent"/"EnableEvent").
   - CANComm_Disable -Disables the component - it stops the send and receive functions. No events will be generated.
   - CANComm_SetAcceptanceCode -Sets the acceptance code registers. This method writes a code mask directly to the acceptance 
                code registers.
   - CANComm_SetAcceptanceMask -Sets the acceptance mask registers. This method writes an acceptance mask directly to the 
                acceptance mask registers.
   - CANComm_SetAcceptanceMode -Sets the acceptance mode register.
   - CANComm_SendFrame -Sends the frame via the CAN device. Using this method the user can send own message to the CAN bus. 
                This method allows to specify CAN buffer number, message ID, data to be sent and frame type 
                (DATA_FRAME/REMOTE_FRAME).
   - CANComm_ReadFrame -Reads a frame from the CAN device. The user is informed about CAN reception through OnFullRxBuffer 
                event or GetStateRX method.
   - CANComm_GetStateTX -Returns a value of the transmission complete flags.
   - CANComm_GetStateRX -Returns a value of the reception complete flag.
   - CANComm_GetError -Returns the content of the receiver flag register.
   - CANComm_SendFrameExt -Sends a frame. This method automatically selects a free transmit buffer for data transmission. The 
                user cannot specify a transmit buffer.

Module "CANPHY0"   (component Init_CANPHY_HCS12Z)
   - CANPHY0_Init -This method initializes registers of the CANPHY module according to the Peripheral Initialization settings. 
                Call this method in user code to initialize the module. By default, the method is called by PE automatically; 
                see "Call Init method" property of the component for more details.

Module "Timer_1ms" (component TimerInt)
   - Timer_1ms_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - Timer_1ms_Disable -This method disables the component - it stops the timer. No events will be generated.

Module "Cpu"       (component MC9S12ZVC192_64)
   - Cpu_EnableInt -Enable maskable interrupts
   - Cpu_DisableInt -Disable maskable interrupts
   - Cpu_SetWaitMode -Set low power mode - Wait mode.   For more information about the wait mode see documentation of this CPU. 
                Release from Wait mode: Reset or interrupt
   - Cpu_SetStopMode -Set low power mode - Stop mode.   For more information about the stop mode see documentation of this CPU.
   - Cpu_Delay100US -This method realizes software delay. The length of delay is at least 100 microsecond multiply input 
                parameter [us100]. As the delay implementation is not based on real clock, the delay time may be increased by 
                interrupt service routines processed during the delay. The method is independent on selected speed mode.

===================================================================================
